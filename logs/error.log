{"action":"create_payment","level":"error","message":"Failed to create payment Failed to create payment","metadata":{"amount":1200,"currency":"THB","customer_email":"customer@example.com","description":"Seat reservation payment - Card","error":"invalid input syntax for type uuid: \"seat-uuid-here\"","payment_method":"card","seat_id":"seat-uuid-here"},"omise_charge_id":null,"payment_id":null,"status":"failed","timestamp":"2025-09-03T00:54:33.287Z"}
{"code":"42P01","driverError":{"code":"42P01","file":"parse_relation.c","length":111,"line":"1392","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR"},"file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Failed to store payment log to database relation \"payment_logs\" does not exist","parameters":["error","Failed to create payment","{\"error\":\"invalid input syntax for type uuid: \\\"seat-uuid-here\\\"\",\"amount\":1200,\"currency\":\"THB\",\"payment_method\":\"card\",\"seat_id\":\"seat-uuid-here\",\"customer_email\":\"customer@example.com\",\"description\":\"Seat reservation payment - Card\"}",null,null,"create_payment","failed"],"position":"13","query":"INSERT INTO \"payment_logs\"(\"id\", \"level\", \"message\", \"metadata\", \"payment_id\", \"omise_charge_id\", \"action\", \"status\", \"created_at\") VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7, DEFAULT) RETURNING \"id\", \"level\", \"created_at\"","routine":"parserOpenTable","severity":"ERROR","stack":"QueryFailedError: relation \"payment_logs\" does not exist\n    at PostgresQueryRunner.query (/app/node_modules/typeorm/driver/postgres/PostgresQueryRunner.js:216:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InsertQueryBuilder.execute (/app/node_modules/typeorm/query-builder/InsertQueryBuilder.js:106:33)\n    at async SubjectExecutor.executeInsertOperations (/app/node_modules/typeorm/persistence/SubjectExecutor.js:260:42)\n    at async SubjectExecutor.execute (/app/node_modules/typeorm/persistence/SubjectExecutor.js:92:9)\n    at async EntityPersistExecutor.execute (/app/node_modules/typeorm/persistence/EntityPersistExecutor.js:140:21)\n    at async LoggerService.logPayment (/app/dist/common/logger/logger.service.js:63:13)\n    at async PaymentsService.createPayment (/app/dist/payments/payments.service.js:77:13)\n    at async /app/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /app/node_modules/@nestjs/core/router/router-proxy.js:9:17","timestamp":"2025-09-03T00:54:33.300Z"}
{"action":"create_payment","level":"error","message":"Failed to create payment Failed to create payment","metadata":{"amount":1200,"currency":"THB","customer_email":"customer@example.com","description":"Seat reservation payment - Card","error":"invalid input syntax for type uuid: \"seat-uuid-here\"","payment_method":"card","seat_id":"seat-uuid-here"},"omise_charge_id":null,"payment_id":null,"status":"failed","timestamp":"2025-09-03T00:54:39.802Z"}
{"code":"42P01","driverError":{"code":"42P01","file":"parse_relation.c","length":111,"line":"1392","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR"},"file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Failed to store payment log to database relation \"payment_logs\" does not exist","parameters":["error","Failed to create payment","{\"error\":\"invalid input syntax for type uuid: \\\"seat-uuid-here\\\"\",\"amount\":1200,\"currency\":\"THB\",\"payment_method\":\"card\",\"seat_id\":\"seat-uuid-here\",\"customer_email\":\"customer@example.com\",\"description\":\"Seat reservation payment - Card\"}",null,null,"create_payment","failed"],"position":"13","query":"INSERT INTO \"payment_logs\"(\"id\", \"level\", \"message\", \"metadata\", \"payment_id\", \"omise_charge_id\", \"action\", \"status\", \"created_at\") VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7, DEFAULT) RETURNING \"id\", \"level\", \"created_at\"","routine":"parserOpenTable","severity":"ERROR","stack":"QueryFailedError: relation \"payment_logs\" does not exist\n    at PostgresQueryRunner.query (/app/node_modules/typeorm/driver/postgres/PostgresQueryRunner.js:216:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InsertQueryBuilder.execute (/app/node_modules/typeorm/query-builder/InsertQueryBuilder.js:106:33)\n    at async SubjectExecutor.executeInsertOperations (/app/node_modules/typeorm/persistence/SubjectExecutor.js:260:42)\n    at async SubjectExecutor.execute (/app/node_modules/typeorm/persistence/SubjectExecutor.js:92:9)\n    at async EntityPersistExecutor.execute (/app/node_modules/typeorm/persistence/EntityPersistExecutor.js:140:21)\n    at async LoggerService.logPayment (/app/dist/common/logger/logger.service.js:63:13)\n    at async PaymentsService.createPayment (/app/dist/payments/payments.service.js:77:13)\n    at async /app/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /app/node_modules/@nestjs/core/router/router-proxy.js:9:17","timestamp":"2025-09-03T00:54:39.807Z"}
{"action":"create_payment","level":"error","message":"Failed to create payment Failed to create payment","metadata":{"amount":1200,"currency":"THB","customer_email":"customer@example.com","description":"Seat reservation payment - Card","error":"invalid input syntax for type uuid: \"seat-uuid-here\"","payment_method":"card","seat_id":"seat-uuid-here"},"omise_charge_id":null,"payment_id":null,"status":"failed","timestamp":"2025-09-03T00:58:58.225Z"}
{"code":"42P01","driverError":{"code":"42P01","file":"parse_relation.c","length":111,"line":"1392","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR"},"file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Failed to store payment log to database relation \"payment_logs\" does not exist","parameters":["error","Failed to create payment","{\"error\":\"invalid input syntax for type uuid: \\\"seat-uuid-here\\\"\",\"amount\":1200,\"currency\":\"THB\",\"payment_method\":\"card\",\"seat_id\":\"seat-uuid-here\",\"customer_email\":\"customer@example.com\",\"description\":\"Seat reservation payment - Card\"}",null,null,"create_payment","failed"],"position":"13","query":"INSERT INTO \"payment_logs\"(\"id\", \"level\", \"message\", \"metadata\", \"payment_id\", \"omise_charge_id\", \"action\", \"status\", \"created_at\") VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7, DEFAULT) RETURNING \"id\", \"level\", \"created_at\"","routine":"parserOpenTable","severity":"ERROR","stack":"QueryFailedError: relation \"payment_logs\" does not exist\n    at PostgresQueryRunner.query (/app/node_modules/typeorm/driver/postgres/PostgresQueryRunner.js:216:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InsertQueryBuilder.execute (/app/node_modules/typeorm/query-builder/InsertQueryBuilder.js:106:33)\n    at async SubjectExecutor.executeInsertOperations (/app/node_modules/typeorm/persistence/SubjectExecutor.js:260:42)\n    at async SubjectExecutor.execute (/app/node_modules/typeorm/persistence/SubjectExecutor.js:92:9)\n    at async EntityPersistExecutor.execute (/app/node_modules/typeorm/persistence/EntityPersistExecutor.js:140:21)\n    at async LoggerService.logPayment (/app/dist/common/logger/logger.service.js:63:13)\n    at async PaymentsService.createPayment (/app/dist/payments/payments.service.js:77:13)\n    at async /app/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /app/node_modules/@nestjs/core/router/router-proxy.js:9:17","timestamp":"2025-09-03T00:58:58.239Z"}
{"action":"create_payment","level":"error","message":"Failed to create payment Failed to create payment","metadata":{"amount":1200,"currency":"THB","customer_email":"customer@example.com","description":"Seat reservation payment - Card","error":"invalid input syntax for type uuid: \"seat-uuid-here\"","payment_method":"card","seat_id":"seat-uuid-here"},"omise_charge_id":null,"payment_id":null,"status":"failed","timestamp":"2025-09-03T00:58:59.836Z"}
{"code":"42P01","driverError":{"code":"42P01","file":"parse_relation.c","length":111,"line":"1392","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR"},"file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Failed to store payment log to database relation \"payment_logs\" does not exist","parameters":["error","Failed to create payment","{\"error\":\"invalid input syntax for type uuid: \\\"seat-uuid-here\\\"\",\"amount\":1200,\"currency\":\"THB\",\"payment_method\":\"card\",\"seat_id\":\"seat-uuid-here\",\"customer_email\":\"customer@example.com\",\"description\":\"Seat reservation payment - Card\"}",null,null,"create_payment","failed"],"position":"13","query":"INSERT INTO \"payment_logs\"(\"id\", \"level\", \"message\", \"metadata\", \"payment_id\", \"omise_charge_id\", \"action\", \"status\", \"created_at\") VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7, DEFAULT) RETURNING \"id\", \"level\", \"created_at\"","routine":"parserOpenTable","severity":"ERROR","stack":"QueryFailedError: relation \"payment_logs\" does not exist\n    at PostgresQueryRunner.query (/app/node_modules/typeorm/driver/postgres/PostgresQueryRunner.js:216:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InsertQueryBuilder.execute (/app/node_modules/typeorm/query-builder/InsertQueryBuilder.js:106:33)\n    at async SubjectExecutor.executeInsertOperations (/app/node_modules/typeorm/persistence/SubjectExecutor.js:260:42)\n    at async SubjectExecutor.execute (/app/node_modules/typeorm/persistence/SubjectExecutor.js:92:9)\n    at async EntityPersistExecutor.execute (/app/node_modules/typeorm/persistence/EntityPersistExecutor.js:140:21)\n    at async LoggerService.logPayment (/app/dist/common/logger/logger.service.js:63:13)\n    at async PaymentsService.createPayment (/app/dist/payments/payments.service.js:77:13)\n    at async /app/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /app/node_modules/@nestjs/core/router/router-proxy.js:9:17","timestamp":"2025-09-03T00:58:59.840Z"}
{"action":"create_payment","level":"error","message":"Failed to create payment Failed to create payment","metadata":{"amount":1200,"currency":"THB","customer_email":"customer@example.com","description":"Seat reservation payment - Card","error":"invalid input syntax for type uuid: \"seat-uuid-here\"","payment_method":"card","seat_id":"seat-uuid-here"},"omise_charge_id":null,"payment_id":null,"status":"failed","timestamp":"2025-09-03T00:59:00.737Z"}
{"code":"42P01","driverError":{"code":"42P01","file":"parse_relation.c","length":111,"line":"1392","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR"},"file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Failed to store payment log to database relation \"payment_logs\" does not exist","parameters":["error","Failed to create payment","{\"error\":\"invalid input syntax for type uuid: \\\"seat-uuid-here\\\"\",\"amount\":1200,\"currency\":\"THB\",\"payment_method\":\"card\",\"seat_id\":\"seat-uuid-here\",\"customer_email\":\"customer@example.com\",\"description\":\"Seat reservation payment - Card\"}",null,null,"create_payment","failed"],"position":"13","query":"INSERT INTO \"payment_logs\"(\"id\", \"level\", \"message\", \"metadata\", \"payment_id\", \"omise_charge_id\", \"action\", \"status\", \"created_at\") VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7, DEFAULT) RETURNING \"id\", \"level\", \"created_at\"","routine":"parserOpenTable","severity":"ERROR","stack":"QueryFailedError: relation \"payment_logs\" does not exist\n    at PostgresQueryRunner.query (/app/node_modules/typeorm/driver/postgres/PostgresQueryRunner.js:216:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InsertQueryBuilder.execute (/app/node_modules/typeorm/query-builder/InsertQueryBuilder.js:106:33)\n    at async SubjectExecutor.executeInsertOperations (/app/node_modules/typeorm/persistence/SubjectExecutor.js:260:42)\n    at async SubjectExecutor.execute (/app/node_modules/typeorm/persistence/SubjectExecutor.js:92:9)\n    at async EntityPersistExecutor.execute (/app/node_modules/typeorm/persistence/EntityPersistExecutor.js:140:21)\n    at async LoggerService.logPayment (/app/dist/common/logger/logger.service.js:63:13)\n    at async PaymentsService.createPayment (/app/dist/payments/payments.service.js:77:13)\n    at async /app/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /app/node_modules/@nestjs/core/router/router-proxy.js:9:17","timestamp":"2025-09-03T00:59:00.742Z"}
{"action":"create_payment","level":"error","message":"Failed to create payment Failed to create payment","metadata":{"amount":1200,"currency":"THB","customer_email":"customer@example.com","description":"Seat reservation payment - Card","error":"invalid input syntax for type uuid: \"seat-uuid-here\"","payment_method":"card","seat_id":"seat-uuid-here"},"omise_charge_id":null,"payment_id":null,"status":"failed","timestamp":"2025-09-03T00:59:09.473Z"}
{"code":"42P01","driverError":{"code":"42P01","file":"parse_relation.c","length":111,"line":"1392","name":"error","position":"13","routine":"parserOpenTable","severity":"ERROR"},"file":"parse_relation.c","length":111,"level":"error","line":"1392","message":"Failed to store payment log to database relation \"payment_logs\" does not exist","parameters":["error","Failed to create payment","{\"error\":\"invalid input syntax for type uuid: \\\"seat-uuid-here\\\"\",\"amount\":1200,\"currency\":\"THB\",\"payment_method\":\"card\",\"seat_id\":\"seat-uuid-here\",\"customer_email\":\"customer@example.com\",\"description\":\"Seat reservation payment - Card\"}",null,null,"create_payment","failed"],"position":"13","query":"INSERT INTO \"payment_logs\"(\"id\", \"level\", \"message\", \"metadata\", \"payment_id\", \"omise_charge_id\", \"action\", \"status\", \"created_at\") VALUES (DEFAULT, $1, $2, $3, $4, $5, $6, $7, DEFAULT) RETURNING \"id\", \"level\", \"created_at\"","routine":"parserOpenTable","severity":"ERROR","stack":"QueryFailedError: relation \"payment_logs\" does not exist\n    at PostgresQueryRunner.query (/app/node_modules/typeorm/driver/postgres/PostgresQueryRunner.js:216:19)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async InsertQueryBuilder.execute (/app/node_modules/typeorm/query-builder/InsertQueryBuilder.js:106:33)\n    at async SubjectExecutor.executeInsertOperations (/app/node_modules/typeorm/persistence/SubjectExecutor.js:260:42)\n    at async SubjectExecutor.execute (/app/node_modules/typeorm/persistence/SubjectExecutor.js:92:9)\n    at async EntityPersistExecutor.execute (/app/node_modules/typeorm/persistence/EntityPersistExecutor.js:140:21)\n    at async LoggerService.logPayment (/app/dist/common/logger/logger.service.js:63:13)\n    at async PaymentsService.createPayment (/app/dist/payments/payments.service.js:77:13)\n    at async /app/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /app/node_modules/@nestjs/core/router/router-proxy.js:9:17","timestamp":"2025-09-03T00:59:09.478Z"}
