services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: boxing-app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: boxing_app_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service (Express.js) - DISABLED
  # backend:
  #   build:
  #     context: ./application/muay-thai-ticket-backend
  #     dockerfile: Dockerfile.dev
  #   container_name: boxing-app-backend
  #   restart: unless-stopped
  #   ports:
  #     - "3002:3002"
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3002
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_USERNAME: postgres
  #     DB_PASSWORD: password
  #     DB_NAME: boxing_app_dev
  #     JWT_SECRET: dev-jwt-secret-key
  #     JWT_EXPIRES_IN: 7d
  #     CORS_ORIGIN: http://localhost:3001,http://localhost:3000,http://localhost:3002
  #     PAYMENT_SERVICE_URL: http://payment-service:3000
  #   volumes:
  #     - ./application/muay-thai-ticket-backend:/app
  #     - /app/node_modules
  #     - ./application/muay-thai-ticket-backend/logs:/app/logs
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:3002/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  # Payment Service API (NestJS)
  payment-service:
    build:
      context: ./application/payment-service
      dockerfile: Dockerfile.dev
    container_name: boxing-app-payment
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: postgres
      OMISE_PUBLIC_KEY: pkey_test_64zhy0wcqhxwhrzmu5p
      OMISE_SECRET_KEY: skey_test_64zhy1dmzjsebwt13qm
      OMISE_WEBHOOK_SECRET: whsec_test_64z8829g9n0tva7hyfa
      FRONTEND_URL: http://localhost:3001
      BACKEND_URL: http://backend:3002
    volumes:
      - ./application/payment-service:/app
      - /app/node_modules
      - ./application/payment-service/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:3000/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application (Next.js)
  frontend:
    build:
      context: ./application/boxing-fight-booking
      dockerfile: Dockerfile.dev
    container_name: boxing-app-frontend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      NEXT_PUBLIC_BACKEND_URL: http://localhost:3002
      NEXT_PUBLIC_PAYMENT_SERVICE_URL: http://localhost:3000
      NEXT_PUBLIC_OMISE_PUBLIC_KEY: pkey_test_64zgq9gczw0n9xcqvsq
    volumes:
      - ./application/boxing-fight-booking:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - payment-service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Cron Job Service
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: boxing-app-cron
    restart: unless-stopped
    depends_on:
      - payment-service
    volumes:
      - ./logs:/var/log

volumes:
  postgres_data:
